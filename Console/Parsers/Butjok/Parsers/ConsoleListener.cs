//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/butjok/CommandLine/Assets/Console/Console.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Butjok.Parsers {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ConsoleParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IConsoleListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConsoleParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput([NotNull] ConsoleParser.InputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConsoleParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput([NotNull] ConsoleParser.InputContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConsoleParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommand([NotNull] ConsoleParser.CommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConsoleParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommand([NotNull] ConsoleParser.CommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConsoleParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] ConsoleParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConsoleParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] ConsoleParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>junction</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJunction([NotNull] ConsoleParser.JunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>junction</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJunction([NotNull] ConsoleParser.JunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>interpolation</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterpolation([NotNull] ConsoleParser.InterpolationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>interpolation</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterpolation([NotNull] ConsoleParser.InterpolationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>int2</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt2([NotNull] ConsoleParser.Int2Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>int2</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt2([NotNull] ConsoleParser.Int2Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolean</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean([NotNull] ConsoleParser.BooleanContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolean</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean([NotNull] ConsoleParser.BooleanContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] ConsoleParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] ConsoleParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>color</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColor([NotNull] ConsoleParser.ColorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>color</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColor([NotNull] ConsoleParser.ColorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>integer</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteger([NotNull] ConsoleParser.IntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>integer</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteger([NotNull] ConsoleParser.IntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>real</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReal([NotNull] ConsoleParser.RealContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>real</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReal([NotNull] ConsoleParser.RealContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplication</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplication([NotNull] ConsoleParser.MultiplicationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplication</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplication([NotNull] ConsoleParser.MultiplicationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryExpression</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpression([NotNull] ConsoleParser.UnaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryExpression</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpression([NotNull] ConsoleParser.UnaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesis</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesis([NotNull] ConsoleParser.ParenthesisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesis</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesis([NotNull] ConsoleParser.ParenthesisContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>summation</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSummation([NotNull] ConsoleParser.SummationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>summation</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSummation([NotNull] ConsoleParser.SummationContext context);
}
} // namespace Butjok.Parsers
