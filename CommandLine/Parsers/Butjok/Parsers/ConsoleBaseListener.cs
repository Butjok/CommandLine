//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/butjok/CommandLine/Assets/Console/Console.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Butjok.Parsers {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IConsoleListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ConsoleBaseListener : IConsoleListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConsoleParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInput([NotNull] ConsoleParser.InputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConsoleParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInput([NotNull] ConsoleParser.InputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConsoleParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommand([NotNull] ConsoleParser.CommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConsoleParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommand([NotNull] ConsoleParser.CommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConsoleParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] ConsoleParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConsoleParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] ConsoleParser.ArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>junction</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJunction([NotNull] ConsoleParser.JunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>junction</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJunction([NotNull] ConsoleParser.JunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>interpolation</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolation([NotNull] ConsoleParser.InterpolationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>interpolation</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolation([NotNull] ConsoleParser.InterpolationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>int2</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInt2([NotNull] ConsoleParser.Int2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>int2</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInt2([NotNull] ConsoleParser.Int2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolean</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean([NotNull] ConsoleParser.BooleanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolean</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean([NotNull] ConsoleParser.BooleanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] ConsoleParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] ConsoleParser.StringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>color</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColor([NotNull] ConsoleParser.ColorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>color</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColor([NotNull] ConsoleParser.ColorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>integer</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInteger([NotNull] ConsoleParser.IntegerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>integer</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInteger([NotNull] ConsoleParser.IntegerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>real</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReal([NotNull] ConsoleParser.RealContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>real</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReal([NotNull] ConsoleParser.RealContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplication</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplication([NotNull] ConsoleParser.MultiplicationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplication</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplication([NotNull] ConsoleParser.MultiplicationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryExpression</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpression([NotNull] ConsoleParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryExpression</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpression([NotNull] ConsoleParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesis</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesis([NotNull] ConsoleParser.ParenthesisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesis</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesis([NotNull] ConsoleParser.ParenthesisContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>summation</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSummation([NotNull] ConsoleParser.SummationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>summation</c>
	/// labeled alternative in <see cref="ConsoleParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSummation([NotNull] ConsoleParser.SummationContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Butjok.Parsers
