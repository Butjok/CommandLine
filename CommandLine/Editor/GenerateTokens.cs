using System.IO;
using System.Linq;
using Butjok.CommandLine.Parsers;
using UnityEditor;
using UnityEngine;

namespace Butjok.CommandLine
{
    public class GenerateTokens : MonoBehaviour
    {
        public const string menuItem = "Window/CommandLine/Generate Tokens";

        public const string filter = "Token t:script";
        
        // @formatter:off
        public const string header = "// https://github.com/Butjok/CommandLine\n";
        public const string bodyTemplate = 
@"// This file was automatically generated by CommandLine/Editor/GenerateTokens.cs

namespace Butjok.CommandLine
{{
    public enum Token
    {{
{0}    }}
}}
"; 
        // @formatter:on
        public const string valueTemplate = "        {0} = {1},\n";

        public const int maxTokens = 1000;

        [MenuItem(menuItem)]
        public static void Run() {

            var file = AssetDatabase
                .FindAssets(filter)
                .Select(AssetDatabase.GUIDToAssetPath)
                .Select(path => (path, text: File.ReadAllText(path)))
                .Single(file => file.text.StartsWith(header));

            var tokens = Enumerable
                .Range(0, maxTokens)
                .Select(i => (value: i, name: CommandLineLexer.DefaultVocabulary.GetSymbolicName(i)))
                .Where(pair => pair.name != null)
                .OrderBy(pair => pair.name)
                .Select(pair => string.Format(valueTemplate, pair.name, pair.value));

            File.WriteAllText(file.path, header + string.Format(bodyTemplate, string.Join("", tokens)));
        }
    }
}